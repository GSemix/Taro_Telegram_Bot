# -*- coding: utf-8 -*-

"""
Shared messages
"""

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤–∏–¥—ã –¥–∞–Ω–Ω—ã—Ö

from typing import Any
from typing import List
from typing import Optional

from aiogram import types
from aiogram.types import Message
from aiogram.types import base

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π –∫–ª–∞—Å—Å –±–æ—Ç–∞

from custom_classes import Bot_

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã–∑–≤–∞–ª–æ –æ—à–∏–±–∫—É, –¥–∞–Ω–Ω—ã–µ –æ–± –æ—à–∏–±–∫–µ, –∏ –¥–µ–π—Å—Ç–≤–∏–µ –≤ —Ö–æ–¥–µ –∫–æ—Ç–æ—Ä–≥–æ –±—ã–ª–∞ –ø–æ–ª—É—á–µ–Ω–∞ –æ—à–∏–±–∫–∞ –∏ –ø—Ä–∏—Å—ã–ª–∞–µ—Ç –≤ –æ—Ç–≤–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ

async def send_error_message(bot: Bot_, message: Message, e: Exception, action: Optional[base.String] = None, action_message_id: Optional[int] = None) -> None:
    """
    This function formats an error message with the exception details and sends it to the user.

    :param bot: The Bot\_ instance for sending the message.
    :type bot: Bot\_
    :param message: The original incoming message.
    :type message: Message
    :param e: The exception that occurred.
    :type e: Exception
    :param action: Name of action
    :type action: Optional[base.String]
    :param action_message_id: Action message's id
    :type action_message_id: Optional[int]
    """

    # –ß–µ—Ä–µ–∑ message.from_user.id –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏–Ω—Ç–µ—Ä–ø—Ä–∏—Ç–∏—Ä—É—è –µ–≥–æ –∫–∞–∫ HTML –∏ –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –≤ –ª–æ–≥–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ action –∏ action_id

    await bot.send_message(message.from_user.id, text = f"<b>–û—à–∏–±–∫–∞:</b> {e}", parse_mode = types.ParseMode.HTML, action = action, action_message_id = action_message_id)

# –§—É–Ω–∫—Ü–∏—è –≤—ã–¥–∞—é—â–∞—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞

async def send_block_message(bot: Bot_, message: Message) -> None:
    """
    This function sends a message to the user indicating that they do not have the necessary access rights.

    :param bot: The Bot\_ instance for sending the message.
    :type bot: Bot\_
    :param message: The original incoming message.
    :type message: Message
    """

    # –ß–µ—Ä–µ–∑ message.from_user.id –ø–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ –≤ –∫–æ—Ç–æ—Ä—ã–π –Ω—É–∂–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∏–Ω—Ç–µ—Ä–ø—Ä–∏—Ç–∏—Ä—É—è –µ–≥–æ –∫–∞–∫ HTML

    await bot.send_message(message.from_user.id, text = f"<b>üò® –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞, –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º</b>", parse_mode = types.ParseMode.HTML)



