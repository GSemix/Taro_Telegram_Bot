# -*- coding: utf-8 -*-

"""
Module for API (FastAPI)

Can start from console: uvicorn --host 127.0.0.1 --port 3100 api:app --workers 1

:var api_cfg: Configurations of API
:type api_cfg: ApiConfig
:var api_logger: Object for logging
:type api_logger: logging.Logger
:var api_logger_cfg: Configuration for logger
:type api_logger_cfg: ApiConfig
:var app: Object of FastAPI
:type app: FastAPI
"""

from fastapi import FastAPI
from fastapi import Request
from fastapi import Response

from .core.config import ApiConfig
from .core.config import ApiLoggingConfig
from .core.logger import get_logger
from utils.helper import get_log

async def log_stuff(request: Request, call_next: callable) -> Response:
    """
    Middleware function that logs information about incoming requests and their responses.

    :param request: The incoming request object.
    :type request: Request
    :param call_next: The callable representing the next middleware or endpoint in the chain.
    :type call_next: Callable
    :returns: The response generated by the next middleware or endpoint.
    :rtype: Response
    """

    response = await call_next(request)
    api_logger.info(get_log(s = "=", text = f"{request.client.host}:{request.client.port} - {request.method} {request.url} with code {response.status_code}"))
    return response

api_cfg = ApiConfig()
api_logger_cfg = ApiLoggingConfig()
api_logger = get_logger(**api_logger_cfg.dict())

app = FastAPI()
app.logger = api_logger





